//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCFinalProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobPortalDBEntities : DbContext
    {
        public JobPortalDBEntities()
            : base("name=JobPortalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplyJobTable> ApplyJobTables { get; set; }
        public virtual DbSet<CompanyTable> CompanyTables { get; set; }
        public virtual DbSet<EmployeeTable> EmployeeTables { get; set; }
        public virtual DbSet<JobTable> JobTables { get; set; }
        public virtual DbSet<LoginTable> LoginTables { get; set; }
    
        public virtual int sp_admininsert(Nullable<int> cid, string cna, string cem, string cphn, string cwaddr)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var cemParameter = cem != null ?
                new ObjectParameter("cem", cem) :
                new ObjectParameter("cem", typeof(string));
    
            var cphnParameter = cphn != null ?
                new ObjectParameter("cphn", cphn) :
                new ObjectParameter("cphn", typeof(string));
    
            var cwaddrParameter = cwaddr != null ?
                new ObjectParameter("cwaddr", cwaddr) :
                new ObjectParameter("cwaddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_admininsert", cidParameter, cnaParameter, cemParameter, cphnParameter, cwaddrParameter);
        }
    
        public virtual int sp_applyjob(Nullable<int> ajbid, Nullable<int> uid, Nullable<int> cid, string resume, string adt, string astat)
        {
            var ajbidParameter = ajbid.HasValue ?
                new ObjectParameter("ajbid", ajbid) :
                new ObjectParameter("ajbid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var adtParameter = adt != null ?
                new ObjectParameter("adt", adt) :
                new ObjectParameter("adt", typeof(string));
    
            var astatParameter = astat != null ?
                new ObjectParameter("astat", astat) :
                new ObjectParameter("astat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applyjob", ajbidParameter, uidParameter, cidParameter, resumeParameter, adtParameter, astatParameter);
        }
    
        public virtual int sp_jobinsert(Nullable<int> cid, string jtitle, string jdes, string jtype, string jskill, string jloc, string jsal, string jvac, string jexp, string jldt, string jstat)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jdesParameter = jdes != null ?
                new ObjectParameter("jdes", jdes) :
                new ObjectParameter("jdes", typeof(string));
    
            var jtypeParameter = jtype != null ?
                new ObjectParameter("jtype", jtype) :
                new ObjectParameter("jtype", typeof(string));
    
            var jskillParameter = jskill != null ?
                new ObjectParameter("jskill", jskill) :
                new ObjectParameter("jskill", typeof(string));
    
            var jlocParameter = jloc != null ?
                new ObjectParameter("jloc", jloc) :
                new ObjectParameter("jloc", typeof(string));
    
            var jsalParameter = jsal != null ?
                new ObjectParameter("jsal", jsal) :
                new ObjectParameter("jsal", typeof(string));
    
            var jvacParameter = jvac != null ?
                new ObjectParameter("jvac", jvac) :
                new ObjectParameter("jvac", typeof(string));
    
            var jexpParameter = jexp != null ?
                new ObjectParameter("jexp", jexp) :
                new ObjectParameter("jexp", typeof(string));
    
            var jldtParameter = jldt != null ?
                new ObjectParameter("jldt", jldt) :
                new ObjectParameter("jldt", typeof(string));
    
            var jstatParameter = jstat != null ?
                new ObjectParameter("jstat", jstat) :
                new ObjectParameter("jstat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobinsert", cidParameter, jtitleParameter, jdesParameter, jtypeParameter, jskillParameter, jlocParameter, jsalParameter, jvacParameter, jexpParameter, jldtParameter, jstatParameter);
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual int sp_login(string un, string pwd, ObjectParameter status)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginid(string un, string pwd)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginid", unParameter, pwdParameter);
        }
    
        public virtual int sp_logininsert(Nullable<int> uid, string un, string pwd, string lt)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var ltParameter = lt != null ?
                new ObjectParameter("lt", lt) :
                new ObjectParameter("lt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logininsert", uidParameter, unParameter, pwdParameter, ltParameter);
        }
    
        public virtual ObjectResult<string> sp_logtype(string un, string pwd)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logtype", unParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxid");
        }
    
        public virtual ObjectResult<sp_selectalljobs_Result> sp_selectalljobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectalljobs_Result>("sp_selectalljobs");
        }
    
        public virtual int sp_userinsert(Nullable<int> eid, string ena, Nullable<int> eag, string edob, string egen, string eaddr, string eem, string ephn, string epht, string equal, string emrk, string eskl, string eexp)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var enaParameter = ena != null ?
                new ObjectParameter("ena", ena) :
                new ObjectParameter("ena", typeof(string));
    
            var eagParameter = eag.HasValue ?
                new ObjectParameter("eag", eag) :
                new ObjectParameter("eag", typeof(int));
    
            var edobParameter = edob != null ?
                new ObjectParameter("edob", edob) :
                new ObjectParameter("edob", typeof(string));
    
            var egenParameter = egen != null ?
                new ObjectParameter("egen", egen) :
                new ObjectParameter("egen", typeof(string));
    
            var eaddrParameter = eaddr != null ?
                new ObjectParameter("eaddr", eaddr) :
                new ObjectParameter("eaddr", typeof(string));
    
            var eemParameter = eem != null ?
                new ObjectParameter("eem", eem) :
                new ObjectParameter("eem", typeof(string));
    
            var ephnParameter = ephn != null ?
                new ObjectParameter("ephn", ephn) :
                new ObjectParameter("ephn", typeof(string));
    
            var ephtParameter = epht != null ?
                new ObjectParameter("epht", epht) :
                new ObjectParameter("epht", typeof(string));
    
            var equalParameter = equal != null ?
                new ObjectParameter("equal", equal) :
                new ObjectParameter("equal", typeof(string));
    
            var emrkParameter = emrk != null ?
                new ObjectParameter("emrk", emrk) :
                new ObjectParameter("emrk", typeof(string));
    
            var esklParameter = eskl != null ?
                new ObjectParameter("eskl", eskl) :
                new ObjectParameter("eskl", typeof(string));
    
            var eexpParameter = eexp != null ?
                new ObjectParameter("eexp", eexp) :
                new ObjectParameter("eexp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userinsert", eidParameter, enaParameter, eagParameter, edobParameter, egenParameter, eaddrParameter, eemParameter, ephnParameter, ephtParameter, equalParameter, emrkParameter, esklParameter, eexpParameter);
        }
    }
}
